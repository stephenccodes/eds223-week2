---
title: "eds223-wk2"
author: "Stephen Carroll"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}
rm(list = ls())
library(sf) # for handling vector data
library(tmap) # for making maps
library(tidyverse) # because we love the tidyverse
library(spData) # preloaded spatial data
```

```{r}
london_point <- st_point(c(0.1, 51.5))

london_geom <- st_sfc(london_point, crs = 4326)

london_attribute <- data.frame(
  name = "London",
  temeperature = 25, 
  date = as.Date("2017-06-21")
)

london_sf <- st_sf(london_attribute, geometry = london_geom)

class(london_sf)

st_crs(london_sf)$IsGeographic
```

```{r}
world <- spData::world

class(world)

names(world)

summary(world$lifeExp)
```

```{r}
world_df <- world %>%
  select(-geom)

world_df <- world %>%
  select(continent)

colnames(world_df)
```


```{r}
world_df <- st_drop_geometry(world)

class(world_df)
```

## Reprojecting data

```{r}
london_proj <- data.frame(x = 53000, y = 180000) %>%
  st_as_sf(coords = c("x", "y"), crs = "EPSG:2770")

st_crs(london_proj) == st_crs(london_sf)

london_sf_transform <- st_transform(london_sf, crs = st_crs(london_proj))
```

```{r}
if(st_crs(london_sf_transform) == st_crs(london_proj)){
  print("it's a match!")
} else {
  print("still not a match")
}
```

```{r}
tm_shape(world, projection = 8857) +
  tm_fill(col = "area_km2")

```


```{r}
tm_shape(world, projection = 3395) +
  tm_fill(col = "area_km2")

```

## Vector attribute subsetting

```{r}
# select columns
world %>%
  select(name_long, pop)

# remove columns
world %>%
  select(-subregion, -area_km2)

# select AND rename columns
world %>%
  select(name = name_long, population = pop)
```

```{r}
# filter observtions based on variables
world1 <- world %>%
  filter(area_km2 < 10000)
```

```{r}
world %>%
  filter(continent == "Asia") %>%
  select(name_long, continent, lifeExp) %>%
  slice_max(lifeExp) %>%
  st_drop_geometry()
```

```{r}
world %>%
  group_by(continent) %>%
  summarise(population = sum(pop, na.rm = TRUE)) %>%
  st_drop_geometry()
  
```

# Joins with vector attribute

```{r}
coffee_data <- spData::coffee_data

nrow(coffee_data)
nrow(world)
```

```{r}
world_coffee <- left_join(world, coffee_data, by = "name_long")
```

```{r}
tm_shape(world_coffee) +
  tm_fill(col = "coffee_production_2017")
```

```{r}
# Example for a warning message about joins
world_coffee_inner <- inner_join(world, coffee_data, by = "name_long")

if(nrow(world_coffee_inner) < nrow(coffee_data)) {
  warning("inner join does not match original data. potential data loss during join")
}
```

```{r}
setdiff(coffee_data$name_long, world$name_long)
```

```{r}

drc <- stringr::str_subset(world$name_long, "Dem*.+Congo")

coffee_data$name_long[stringr::str_detect(coffee_data$name_long, "Congo")] <- drc
```



```{r}

if(nrow(world_coffee_inner) < nrow(coffee_data)) {
  warning("inner join does not match original data. potential data loss during join")
}

```

```{r}
tm_shape(world_coffee_inner) +
  tm_polygons(fill = "coffe_production_2017",
              title = "Coffee production (2017)") +
  tm_layout(legend.outside = TRUE)
  
```


```{r}
coffee_world <- left_join(coffee_data, world, by = "name_long")

class(coffee_world)
```





